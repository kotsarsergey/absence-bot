import { upsertUser } from "../../db/db-service";
import { MyContext, MyConversation } from "../interfaces/custom-context.interface";
import { returnKeyboard } from "../keyboard/keyboard";

export async function changeNameConversation(
    conversation: MyConversation,
    ctx: MyContext
  ) {
    await ctx.reply(
      "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –≤ –æ—Ç—á–µ—Ç–∞—Ö" +
        "\n_*–í–∞–∂–Ω–æ*_: –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ ID —Ç–∞–∫ –∂–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –æ—Ç—á–µ—Ç, —Ç–∞–∫ —á—Ç–æ –≤–∞–º –Ω–µ —Å–ø—Ä—è—Ç–∞—Ç—å—Å—èüòà",
      { parse_mode: "MarkdownV2" }
    );
    const { message } = await conversation.wait();
  
    await upsertUser({
      id: ctx.session.userId!,
      username: ctx.msg?.from?.username,
      name: message?.text,
      isAdmin: ctx.session.isAdmin,
      isNotifications: !ctx.session.isNotifications,
    });
  
    await ctx.reply(`–í–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–º—è:*\n${message?.text}*`, {
      parse_mode: "MarkdownV2",
    });
  
    const answer = "–ò–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ.\n";
  
    await returnKeyboard(ctx, answer);
  
    return;
  }